dataset: FB15k-237

training:
  epochs: 100000
  neg_sample_rate: 1  # Number of negative samples to produce per triple (Paper report 1 and Michael's code is 10)
  optimiser:
    algorithm: adam
    weight_decay: 0.0
    learn_rate: 0.01
  use_cuda: True  # If true, model is trained on GPU

encoder:
  model: c-rgcn
  num_layers: 2  # Number of layers in RGCN
  embedding_size: 500  # Node embedding size before and after compression
  hidden_size: 16  # Dimension to compress node embeddings to (ideally smaller than embedding_size)
  decomposition:
    type: block
    num_blocks: 5
  edge_dropout:
    general: 0.2
    self_loop: 0.4

decoder:
  model: distmult
  l2_penalty: 0.01

evaluation:
  eval_size: 50  # Number of triple to randomly sample and use for evaluation
  use_cuda: True  # If true, runs evaluation on GPU
  filtered: False  # Filters train and test triples from results
  early_stopping:
    check_every: 2000  # Evaluate model performance at every n epoch interval
    metric: mrr
    min_epochs: 1000  # Minimum of epochs before early stopping can be applied
    num_stops: 2  # If no improvement in metric is detected after n times, apply early stopping
