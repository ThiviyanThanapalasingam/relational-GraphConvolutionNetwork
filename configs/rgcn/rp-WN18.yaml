dataset:
  name: WN18

training:
  epochs: 1000  # Limit the number of training epochs
  neg_sample_rate: 1  # Number of negative samples to produce per triple (Paper report 1 and Michael's code is 10)
  optimiser:
    algorithm: adam
    weight_decay: 0.0
    learn_rate: 0.01
  use_cuda: False  # If true, model is trained on GPU

encoder:
  model: rgcn
  num_layers: 1  # Number of layers in RGCN
  embedding_size: 200  # Size of RGCN node embedding
  decomposition:
    type: basis
    num_bases: 2
  edge_dropout:
    general: 0.2
    self_loop: 0.4

decoder:
  model: distmult
  l2_penalty: 0.01

evaluation:
  final_run: True  # If true, evaluates model on test set. Otherwise, validation set is used.
  filtered: True  # If true, reports filtered metrics. Otherwise, raw metrics are computed.
  early_stopping:
    check_every: 10  # Evaluate model performance at every n epoch interval
    metric: mrr
    min_epochs: 100  # Minimum of epochs before early stopping can be applied
    num_stops: 5  # If no improvement in metric is detected after n times, apply early stopping
    eval_size: 200  # Number of triples to randomly sample from training dataset (Default=100)
#  final_eval_size: 10000  # Limit the number of triples to randomly sample from test dataset
